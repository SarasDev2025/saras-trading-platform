version: '3.8'

services:
  # Primary Database - Users, Authentication, Accounts
  postgres-primary:
    image: postgres:15-alpine
    container_name: trading-db-primary
    environment:
      POSTGRES_DB: trading_primary
      POSTGRES_USER: trading_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_primary_data:/var/lib/postgresql/data
      - ./init-scripts/primary:/docker-entrypoint-initdb.d
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    networks:
      - trading-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_admin -d trading_primary"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Trading Database - Orders, Trades, Positions
  postgres-trading:
    image: postgres:15-alpine
    container_name: trading-db-trading
    environment:
      POSTGRES_DB: trading_orders
      POSTGRES_USER: trading_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_trading_data:/var/lib/postgresql/data
      - ./init-scripts/trading:/docker-entrypoint-initdb.d
      - ./config/postgresql-trading.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5433:5432"
    networks:
      - trading-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_admin -d trading_orders"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Analytics Database - Historical Data, Reporting
  postgres-analytics:
    image: postgres:15-alpine
    container_name: trading-db-analytics
    environment:
      POSTGRES_DB: trading_analytics
      POSTGRES_USER: trading_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_analytics_data:/var/lib/postgresql/data
      - ./init-scripts/analytics:/docker-entrypoint-initdb.d
      - ./config/postgresql-analytics.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5434:5432"
    networks:
      - trading-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_admin -d trading_analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: trading-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # PgBouncer Connection Pooler
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: trading-pgbouncer
    environment:
      DATABASES_HOST: postgres-primary,postgres-trading,postgres-analytics
      DATABASES_PORT: 5432
      DATABASES_USER: trading_admin
      DATABASES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASES_DBNAME: trading_primary,trading_orders,trading_analytics
      POOL_MODE: transaction
      SERVER_RESET_QUERY: DISCARD ALL
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 25
    ports:
      - "6432:6432"
    depends_on:
      - postgres-primary
      - postgres-trading
      - postgres-analytics
    networks:
      - trading-network

  # Monitoring with Prometheus
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: trading-postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://trading_admin:${POSTGRES_PASSWORD}@postgres-primary:5432/trading_primary?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - trading-network
    depends_on:
      - postgres-primary

volumes:
  postgres_primary_data:
  postgres_trading_data:
  postgres_analytics_data:
  redis_data:

networks:
  trading-network:
    driver: bridge